# Workflow for building and deploying a Hugo site
name: Deploy Hugo site

on:
  # Runs on pushes targeting the default branch
  push:
    branches: 
      - staging
#      - main
#  pull_request:
#    types:
#      - closed

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

## Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
## However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  info:
    runs-on: ubuntu-latest
    steps:
      - name: Echo settings
        run: |
          echo "github.workflow: ${{ github.workflow }}"
          echo "github.ref: ${{ github.ref }}"
          echo "github.ref_name: ${{ github.ref_name }}"
          echo "github.base_ref: ${{ github.base_ref }}"
          echo "github.head_ref: ${{ github.head_ref }}"

  # Build job
  build:
    runs-on: ubuntu-latest
    if: github.ref_name == 'staging'
    environment: staging
    needs: info
    env:
      HUGO_VERSION: 0.138.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
      - name: Upload files via SSH
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          port: ${{ secrets.SERVER_PORT }}
          key: ${{ secrets.SERVER_KEY }}
          source: "./public"
          target: "sources/"

  # Deployment job for staging
  staging_deploy:
    runs-on: ubuntu-latest
    if: github.ref_name == 'staging'
    environment: staging
    needs: info, build
    steps:
      - name: Deploy staging site
        run: |
          echo "Deploy staging site"

  # Deployment job for production
  staging_deploy:
    runs-on: ubuntu-latest
    if: github.ref_name == 'main'
    environment: production
    needs: info
    steps:
      - name: Deploy production site
        run: |
          echo "Deploy production site"
